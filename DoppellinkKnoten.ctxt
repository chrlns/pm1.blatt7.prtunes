#BlueJ class context
comment0.target=DoppellinkKnoten
comment0.text=\r\n\ Diese\ Klasse\ modelliert\ doppelt\ verkettbare\ Knoten,\ die\ jeweils\ ein\ Element\r\n\ vom\ Typ\ Titel\ enthalten\ koennen.\r\n\ \r\n\ @author\ Till\ Aust,\ Petra\ Becker-Pechau,\ Axel\ Schmolitzky\r\n\ @version\ 2018\r\n
comment1.params=
comment1.target=DoppellinkKnoten()
comment1.text=\r\n\ Erzeuge\ einen\ neuen\ Knoten\ ohne\ Element\ und\ Verkettungsinformationen.\r\n
comment2.params=element\ vorgaenger\ nachfolger
comment2.target=DoppellinkKnoten(Titel,\ DoppellinkKnoten,\ DoppellinkKnoten)
comment2.text=\r\n\ Erzeuge\ einen\ neuen\ Knoten\ und\ setze\ gleich\ Vorgaenger,\ Nachfolger\ und\r\n\ Element.\r\n\ \r\n\ @param\ element\r\n\ \ \ \ \ \ \ \ \ \ \ \ Das\ Element,\ das\ der\ Knoten\ tragen\ soll\r\n\ @param\ vorgaenger\r\n\ \ \ \ \ \ \ \ \ \ \ \ Der\ vorherige\ Knoten\r\n\ @param\ nachfolger\r\n\ \ \ \ \ \ \ \ \ \ \ \ Der\ naechste\ Knoten\r\n
comment3.params=
comment3.target=DoppellinkKnoten\ gibNachfolger()
comment3.text=\r\n\ Gib\ den\ nachfolgenden\ Knoten\ zurueck.\r\n\ \r\n\ @return\ den\ Nachfolgerknoten\r\n
comment4.params=nachfolger
comment4.target=void\ setzeNachfolger(DoppellinkKnoten)
comment4.text=\r\n\ Setze\ den\ nachfolgenden\ Knoten.\r\n\ \r\n\ @param\ nachfolger\r\n\ \ \ \ \ \ \ \ \ \ \ \ der\ Nachfolgerknoten.\r\n
comment5.params=
comment5.target=DoppellinkKnoten\ gibVorgaenger()
comment5.text=\r\n\ Gib\ den\ vorherigen\ Knoten\ zurueck.\r\n\ \r\n\ @return\ den\ Vorgaenger\ dieses\ Knotens\r\n
comment6.params=vorgaenger
comment6.target=void\ setzeVorgaenger(DoppellinkKnoten)
comment6.text=\r\n\ Setze\ den\ Vorgaenger\ dieses\ Knotens.\r\n\ \r\n\ @param\ vorgaenger\r\n\ \ \ \ \ \ \ \ \ \ \ \ der\ Vorgaengerknoten.\r\n
comment7.params=
comment7.target=Titel\ gibTitel()
comment7.text=\r\n\ Gib\ das\ (Daten-)Element\ dieses\ Knotens.\r\n\ \r\n\ @return\ den\ gespeicherten\ Titel\ dieses\ Knotens.\r\n
comment8.params=element
comment8.target=void\ setzeTitel(Titel)
comment8.text=\r\n\ Setze\ das\ (Daten-)Element\ dieses\ Knotens.\r\n\ \r\n\ @param\ element\r\n\ \ \ \ \ \ \ \ \ \ \ \ Ein\ Titel.\r\n
comment9.params=titel
comment9.target=boolean\ equals(Titel)
comment9.text=\r\n\ Diese\ Methode\ faengt\ einen\ typischen\ Fehler\ ab,\ der\ auftritt,\r\n\ wenn\ in\ der\ Klasse\ LinkedTitelListe\ versehentlich\ ein\ Kettenglied\r\n\ mit\ einem\ Element\ verglichen\ wird.\r\n
numComments=10
